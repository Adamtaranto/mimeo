[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "mimeo"
description = "Scan genomes for internally repeated sequences, elements which are repetitive in another species, or high-identity HGT candidate regions between species."
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
authors = [
    { name = "Adam Taranto", email = "adam.p.taranto@gmail.com" }
]

classifiers = [
    "Programming Language :: Python :: 3",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "License :: OSI Approved :: MIT License",
]

dependencies = ["biopython>=1.70", "pandas>=0.20.3",]

    
dynamic = ["version"]

[project.urls]
homepage = "https://github.com/adamtaranto/mimeo"
documentation = "https://github.com/adamtaranto/mimeo"
repository = "https://github.com/adamtaranto/mimeo"

[project.scripts]
mimeo-x="mimeo.run_interspecies:main"
mimeo-self="mimeo.run_self:main"
mimeo-map="mimeo.run_map:main"
mimeo-filter="mimeo.run_filter:main"

[tool.hatch.build]
source = "src"

exclude = [
    "environment.yml",
]

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.vcs]
tag-pattern = "v*"  # Git tags starting with 'v' will be used for versioning
fallback-version = "0.0.0"

[tool.hatch.build.hooks.vcs]
version-file = "src/mimeo/_version.py"

# Optional dependencies for testing
[project.optional-dependencies]
dev = ["hatch", "isort", "ipykernel", "numpydoc-validation", "pre-commit", "pytest", "pytest-cov", "ruff"]

[tool.pytest.ini_options]
addopts = "-v --cov=mimeo --cov-branch --cov-report=xml --cov-report=term"
testpaths = ["tests"]
python_files = ["test_*.py"]

[tool.ruff]
line-length = 88
lint.select = [
    "C",  # mccabe rules
    "F",  # pyflakes rules
    "E",  # pycodestyle error rules
    "W",  # pycodestyle warning rules
    "B",  # flake8-bugbear rules
    "I",  # isort rules
]
lint.ignore = [
    "C901",  # max-complexity-10
    "E501",  # line-too-long
    "I001",  # isort-imports
]

[tool.ruff.format]
indent-style = "space"
quote-style = "single"

[tool.isort]
profile = "black"
known_third_party = ["Bio", "pandas"]
known_first_party = ["mimeo"]
default_section = "THIRDPARTY"
force_sort_within_sections = true

[tool.numpydoc_validation]
checks = [
    "all",  # report on all checks
    "ES01", # but don't require an extended summary
    "EX01", # or examples
    "SA01", # or a see also section
    "SS06", # and don't require the summary to fit on one line
]
exclude = [  # don't report on checks for these
    '\.__init__$',
    '\.__repr__$',
    '\.__str__$',
]
override_SS05 = [  # allow docstrings to start with these words
    '^Process ',
    '^Assess ',
    '^Access ',
]
