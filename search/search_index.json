{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Mimeo","text":""},{"location":"#table-of-contents","title":"Table of contents","text":"<ul> <li>Modules</li> <li>Installing Mimeo</li> <li>License</li> </ul>"},{"location":"#modules","title":"Modules","text":"<p>Mimeo comprises three tools for parsing repeats from whole-genome alignments:</p>"},{"location":"#mimeo-self","title":"mimeo-self","text":"<p>Internal repeat finder. Mimeo-self aligns a genome to itself and extracts high-identity segments above a coverage threshold. This method is less sensitive to disruption by indels and repeat-directed point mutations than kmer-based methods such as RepeatScout. Reported annotations indicate overlapping segments above the coverage threshold, mimeo-self does not attempt to separate nested repeats. Use this tool to identify candidate repeat regions for curated annotation.</p>"},{"location":"#mimeo-x","title":"mimeo-x","text":"<p>Cross-species repeat finder. A newly acquired or low-copy transposon may slip past copy-number based annotation tools. Mimeo-x searches for features which are abundant in an external reference genome, allowing for annotation of complete elements as they occur in a horizontal-transfer donor species, or of conserved coding segments of related transposon families.</p>"},{"location":"#mimeo-map","title":"mimeo-map","text":"<p>Find all high-identity segments shared between genomes. Mimeo-map identifies candidate horizontally transferred segments between sufficiently diverged species. When comparing isolates of a single species, aligned segments correspond to directly homologous sequences and internally repetitive features.</p> <p>Intra/Inter-genomic alignments from Mimeo-self or Mimeo-x can be reprocessed with Mimeo-map to generate annotations of unfiltered/uncollapsed alignments. These raw alignment annotations can be used to interrogate repetitive-segments for coverage breakpoints corresponding to nested transposons with differing abundances across the genome.</p>"},{"location":"#mimeo-filter","title":"mimeo-filter","text":"<p>An additional tool mimeo-filter is now included to allow post-filtering of SSR-rich sequences from FASTA formatted candidate-repeat libraries.</p>"},{"location":"#installing-mimeo","title":"Installing Mimeo","text":"<p>Requirements:</p> <ul> <li>LASTZ genome alignment tool from the Miller Lab, Penn State.</li> <li>bedtools</li> <li>trf</li> </ul> <p>Install from Bioconda:</p> <pre><code>conda install mimeo\n</code></pre> <p>Install from PyPi:</p> <pre><code>pip install mimeo\n</code></pre> <p>Clone and install from this repository:</p> <pre><code>git clone https://github.com/Adamtaranto/mimeo.git &amp;&amp; cd mimeo\n\npip install -e '.[dev]'\n</code></pre>"},{"location":"#license","title":"License","text":"<p>Software provided under MIT license.</p>"},{"location":"cli-tutorial/","title":"Mimeo command line tutorial","text":""},{"location":"cli-tutorial/#demo-mimeo-self","title":"Demo: mimeo-self","text":"<p>Annotate features in genome A which are &gt; 100bp and occur with &gt;= 80% identity at least 3 times on other scaffolds OR at least 4 times on the same scaffold.</p> <pre><code>mimeo-self --adir data/A_genome_Split --afasta data/A_genome.fasta \\\n-d MS_outdir --gffout A_genome_Inter3_Intra4_id80_len_100.gff3 \\\n--outfile A_genome_Self_Align.tab --label A_Rep3 --prefix A_Self --minIdt 80 \\\n--minLen 100 --minCov 3 --intraCov 4 --strictSelf\n</code></pre> <p>Output:</p> <ul> <li>MS_outdir/A_genome_Inter3_Intra4_id80_len_100.gff3</li> <li>MS_outdir/A_genome_Self_Align.tab</li> <li>data/A_genome_Split/*.fa</li> </ul>"},{"location":"cli-tutorial/#demo-mimeo-x","title":"Demo: mimeo-x","text":"<p>Annotate features in genome A which are &gt; 100bp and occur with &gt;= 80% identity at least 5 times in genome B.</p> <pre><code>mimeo-x --afasta data/A_genome.fasta --bfasta data/B_genome.fasta \\\n-d MX_outdir --gffout B_Rep5_in_A.gff3 --outfile B_Reps_in_A_id80_len100.tab \\\n--label B_Rep5 --prefix B_Rep5 --minIdt 80 --minLen 100 --minCov 5\n</code></pre> <p>Output:</p> <ul> <li>MX_outdir/B_Rep5_in_A.gff3</li> <li>MX_outdir/B_Reps_in_A_id80_len100.tab</li> </ul>"},{"location":"cli-tutorial/#demo-mimeo-map","title":"Demo: mimeo-map","text":"<p>Annotate features in genome A which are &gt; 100bp and occur with &gt;= 90% identity in genome B. No coverage filter, all alignments are reported.</p> <pre><code>mimeo-map --afasta data/A_genome.fasta --bfasta data/B_genome.fasta \\\n-d MM_outdir --gffout B_in_A_id90.gff3 --outfile B_in_A_id90.tab \\\n--label B_90 --prefix B_90 --minIdt 90 --minLen 100\n</code></pre> <p>Output:</p> <ul> <li>MM_outdir/B_in_A_id90.gff3</li> <li>MM_outdir/B_in_A_id90.tab</li> </ul>"},{"location":"cli-tutorial/#mimeo-map-ssr-filter","title":"mimeo-map + SSR filter","text":"<p>Annotate features in genome A which are &gt; 100bp and occur with &gt;= 98% identity in genome B. Reuse B to A-genome alignment from the previous run.</p> <p>Filter out hits which are &gt;= 40% tandem repeats. Write filtered hits as tab file and GFF3 annotation.</p> <pre><code>mimeo-map --afasta data/A_genome.fasta --bfasta data/B_genome.fasta \\\n-d MM_outdir --gffout B_in_A_id98_maxSSR40.gff3 --outfile B_in_A_id98.tab \\\n--label B_98 --prefix B_98 --minIdt 98 --minLen 100 \\\n--recycle --maxtandem 40 --writeTRF\n</code></pre> <p>Output:</p> <ul> <li>MM_outdir/B_in_A_id98_maxSSR40.gff3</li> <li>MM_outdir/B_in_A_id98.tab.trf</li> </ul>"},{"location":"cli-tutorial/#demo-mimeo-filter","title":"Demo: mimeo-filter","text":"<p>Filter sequences comprised of &gt;= 40% short tandem repeats from a multifasta library of candidate transposons.</p> <pre><code>mimeo-filter --infile data/candidate_TEs.fa\n</code></pre> <p>Output:</p> <ul> <li>candidate_TEs_filtered.fa</li> </ul>"},{"location":"cli-tutorial/#standard-options","title":"Standard options","text":""},{"location":"cli-tutorial/#mimeo-self","title":"mimeo-self","text":"<pre><code>Usage: mimeo-self [-h] [--adir ADIR] [--afasta AFASTA] [-r] [-d OUTDIR]\n                  [--gffout GFFOUT] [--outfile OUTFILE] [--verbose]\n                  [--label LABEL] [--prefix PREFIX] [--lzpath LZPATH]\n                  [--bedtools BEDTOOLS] [--minIdt MINIDT] [--minLen MINLEN]\n                  [--minCov MINCOV] [--hspthresh HSPTHRESH]\n                  [--intraCov INTRACOV] [--strictSelf]\n\nInternal repeat finder. Mimeo-self aligns a genome to itself and extracts\nhigh-identity segments above a coverage threshold.\n\nOptional arguments:\n  -h, --help      Show this help message and exit.\n  --adir          Name of the directory containing sequences from the genome.\n                  Write split files here if providing genome as\n                  multifasta.\n  --afasta        Genome as multifasta.\n  -r, --recycle   Use existing alignment \"--outfile\" if found.\n  -d , --outdir   Write output files to this directory. (Default: cwd)\n  --gffout        Name of GFF3 annotation file.\n  --outfile       Name of alignment result file.\n  --verbose       If set report LASTZ progress.\n  --label         Set annotation TYPE field in gff.\n  --prefix        ID prefix for internal repeats.\n  --lzpath        Custom path to LASTZ executable if not in $PATH.\n  --bedtools      Custom path to bedtools executable if not in $PATH.\n  --minIdt        Minimum alignment identity to report.\n  --minLen        Minimum alignment length to report.\n  --minCov        Minimum depth of aligned segments to report repeat\n                  feature.\n  --hspthresh     Set HSP min score threshold for LASTZ.\n  --intraCov      Minimum depth of aligned segments from the same scaffold\n                  to report feature. Used if \"--strictSelf\" mode is\n                  selected.\n  --strictSelf    If set process same-scaffold alignments separately\n                  with the option to use higher \"--intraCov\" threshold.\n                  Sometimes useful to avoid false repeat calls from\n                  staggered alignments over SSRs or short tandem\n                  duplication.\n</code></pre>"},{"location":"cli-tutorial/#mimeo-x","title":"mimeo-x","text":"<pre><code>Usage: mimeo-x [-h] [--adir ADIR] [--bdir BDIR] [--afasta AFASTA]\n               [--bfasta BFASTA] [-r] [-d OUTDIR] [--gffout GFFOUT]\n               [--outfile OUTFILE] [--verbose] [--label LABEL]\n               [--prefix PREFIX] [--lzpath LZPATH] [--bedtools BEDTOOLS]\n               [--minIdt MINIDT] [--minLen MINLEN] [--minCov MINCOV]\n               [--hspthresh HSPTHRESH]\n\nCross-species repeat finder. Mimeo-x searches for features which are abundant\nin an external reference genome.\n\nOptional arguments:\n  -h, --help      Show this help message and exit.\n  --adir          Name of the directory containing sequences from A genome.\n  --bdir          Name of the directory containing sequences from B genome.\n  --afasta        A genome as multifasta.\n  --bfasta        B genome as multifasta.\n  -r, --recycle   Use existing alignment \"--outfile\" if found.\n  -d , --outdir   Write output files to this directory. (Default: cwd)\n  --gffout        Name of GFF3 annotation file.\n  --outfile       Name of alignment result file.\n  --verbose       If set report LASTZ progress.\n  --label         Set annotation TYPE field in GFF.\n  --prefix        ID prefix for B-genome repeats annotated in A-genome.\n  --lzpath        Custom path to LASTZ executable if not in $PATH.\n  --bedtools      Custom path to bedtools executable if not in $PATH.\n  --minIdt        Minimum alignment identity to report.\n  --minLen        Minimum alignment length to report.\n  --minCov        Minimum depth of B-genome hits to report feature in\n                  A-genome.\n  --hspthresh     Set HSP min score threshold for LASTZ.\n</code></pre>"},{"location":"cli-tutorial/#mimeo-map","title":"mimeo-map","text":"<pre><code>Usage: mimeo-map [-h] [--adir ADIR] [--bdir BDIR] [--afasta AFASTA]\n                 [--bfasta BFASTA] [-r] [-d OUTDIR] [--gffout GFFOUT]\n                 [--outfile OUTFILE] [--verbose] [--label LABEL]\n                 [--prefix PREFIX] [--keeptemp] [--lzpath LZPATH]\n                 [--minIdt MINIDT] [--minLen MINLEN] [--hspthresh HSPTHRESH]\n                 [--TRFpath TRFPATH] [--tmatch TMATCH] [--tmismatch TMISMATCH]\n                 [--tdelta TDELTA] [--tPM TPM] [--tPI TPI]\n                 [--tminscore TMINSCORE] [--tmaxperiod TMAXPERIOD]\n                 [--maxtandem MAXTANDEM] [--writeTRF]\n\nFind all high-identity segments shared between genomes.\n\nOptional arguments:\n  -h, --help      Show this help message and exit.\n  --adir          Name of the directory containing sequences from A genome.\n  --bdir          Name of the directory containing sequences from B genome.\n  --afasta        A genome as multifasta.\n  --bfasta        B genome as multifasta.\n  -r, --recycle   Use existing alignment \"--outfile\" if found.\n  -d, --outdir    Write output files to this directory. (Default: cwd)\n  --gffout        Name of GFF3 annotation file. If not set, suppress\n                  output.\n  --outfile       Name of alignment result file.\n  --verbose       If set report LASTZ progress.\n  --label         Set annotation TYPE field in GFF.\n  --prefix        ID prefix for B-genome hits annotated in A-genome.\n  --keeptemp      If set does not remove temp files.\n  --lzpath        Custom path to LASTZ executable if not in $PATH.\n  --minIdt        Minimum alignment identity to report.\n  --minLen        Minimum alignment length to report.\n  --hspthresh     Set HSP min score threshold for LASTZ.\n  --TRFpath       Custom path to TRF executable if not in $PATH.\n  --tmatch        TRF matching weight.\n  --tmismatch     TRF mismatching penalty.\n  --tdelta        TRF indel penalty.\n  --tPM           TRF match probability.\n  --tPI           TRF indel probability.\n  --tminscore     TRF minimum alignment score to report.\n  --tmaxperiod    TRF maximum period size to report.\n  --maxtandem     Max percentage of an A-genome alignment which may be masked by TRF.\n                  If exceeded, the alignment will be discarded.\n  --writeTRF      If set write TRF filtered alignment file for use with\n                  other mimeo modules.\n</code></pre>"},{"location":"cli-tutorial/#mimeo-filter","title":"mimeo-filter","text":"<pre><code>Usage: mimeo-filter [-h] --infile INFILE [-d OUTDIR] [--outfile OUTFILE]\n                    [--keeptemp] [--verbose] [--TRFpath TRFPATH]\n                    [--tmatch TMATCH] [--tmismatch TMISMATCH]\n                    [--tdelta TDELTA] [--tPM TPM] [--tPI TPI]\n                    [--tminscore TMINSCORE] [--tmaxperiod TMAXPERIOD]\n                    [--maxtandem MAXTANDEM]\n\nFilter SSR containing sequences from FASTA library of repeats.\n\nOptional arguments:\n  -h, --help            Show this help message and exit.\n  --infile              Name of the directory containing sequences from A genome.\n  -d, --outdir          Write output files to this directory. (Default: cwd)\n  --outfile             Name of alignment result file.\n  --keeptemp            If set does not remove temp files.\n  --verbose             If set report LASTZ progress.\n  --TRFpath             Custom path to TRF executable if not in $PATH.\n  --tmatch              TRF matching weight\n  --tmismatch           TRF mismatching penalty.\n  --tdelta              TRF indel penalty.\n  --tPM                 TRF match probability.\n  --tPI                 TRF indel probability.\n  --tminscore           TRF minimum alignment score to report.\n  --tmaxperiod          TRF maximum period size to report. Note: Setting this\n                        score too high may exclude some LTR retrotransposons.\n                        Optimal len to exclude only SSRs is 10-50bp.\n  --maxtandem           Max percentage of a sequence which may be masked by\n                        TRF. If exceeded, the element will be discarded.\n</code></pre>"},{"location":"cli-tutorial/#importing-alignments","title":"Importing alignments","text":"<p>Whole genome alignments generated by alternative tools (i.e. BLAT) can be provided to any of the Mimeo modules as a tab-delimited file with the columns:</p> <pre><code>[1]   name1     = Name of target sequence in genome A\n[2]   strand1   = Strand of alignment in target sequence\n[3]   start1    = 5-prime position of alignment in target (lower value irrespective of strand)\n[4]   end1      = 3-prime position of alignment in target (higher value irrespective of strand)\n[5]   name2     = Name of source sequence in genome B\n[6]   strand2   = Strand of alignment in source\n[7]   start2+   = 5-prime position of alignment in source (lower value irrespective of strand)\n[8]   end2+     = 3-prime position of alignment in source (higher value irrespective of strand)\n[9]   score     = Alignment score as int\n[10]  identity  = Identity of alignment as float\n</code></pre> <p>File should be sorted by columns 1,3,4</p>"}]}